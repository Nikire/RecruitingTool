generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int             @id @default(autoincrement())
  uid             String          @unique @default(uuid()) @db.Uuid
  name            String
  email           String          @unique
  password        String
  roles           RolesType[]     @default([USER])
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  hiringProcesses HiringProcess[] @relation("HiringProcesses")
  candidate       HiringProcess[] @relation("Candidate")
}

enum RolesType {
  USER
  ADMIN
  SUPER_ADMIN
  HR
}

model HiringProcess {
  id          Int                 @id @default(autoincrement())
  uid         String              @unique @default(uuid()) @db.Uuid
  title       String
  status      HiringProcessStatus @default(OPEN)
  createdAt   DateTime            @default(now())
  updatedAt   DateTime            @updatedAt
  createdBy   User                @relation("HiringProcesses", fields: [createdById], references: [id])
  createdById Int
  candidate   User                @relation("Candidate", fields: [candidateId], references: [id])
  candidateId Int
  stages      Stage[]
}

enum HiringProcessStatus {
  OPEN
  CLOSED
  IN_PROGRESS
  CANCELLED
  REJECTED
}

model Stage {
  id              Int           @id @default(autoincrement())
  uid             String        @unique @default(uuid()) @db.Uuid
  title           String
  type            StageType
  description     String
  status          StageStatus   @default(OPEN)
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  hiringProcess   HiringProcess @relation(fields: [hiringProcessId], references: [id])
  hiringProcessId Int
  position        Int

  @@unique([hiringProcessId, position])
}

enum StageStatus {
  OPEN
  CANCELLED
  DONE
}

enum StageType {
  INTERVIEW
  TECHNICAL_INTERVIEW
  FINAL_INTERVIEW
  OFFER
}
